
@app.route("/crews", methods=["GET"])
def get_crews_endpoint():
    conn = get_database_connection()
    cursor = conn.cursor(buffered=True)
    
    sqlquery = """
    SELECT
        M.movie_id,
        JSON_OBJECT(
            'directors', JSON_OBJECT(
                    'id', D.director_id,
                    'fname', D.director_fname,
                    'lname', D.director_lname,
                    'mname', D.director_mname,
                    'img_url', D.director_img_url,
                    'popular', D.director_popular
            ),
            'writers', JSON_ARRAYAGG(
                JSON_OBJECT(
                    'id', W.writer_id,
                    'fname', W.writer_fname,
                    'lname', W.writer_lname,
                    'mname', W.writer_mname,
                    'img_url', W.writer_img_url,
                    'popular', W.writer_popular
                )
            )
        ) AS crews
    FROM
        Movie AS M
    LEFT JOIN
        Director AS D 
        ON M.director_id = D.director_id
    LEFT JOIN 
        Movie_has_Writer AS MW 
        ON M.movie_id = MW.movie_id
    LEFT JOIN
        Writer AS W 
        ON W.writer_id = MW.writer_id
    GROUP BY
        M.movie_id
    """
    cursor.execute(sqlquery)
    result_set = cursor.fetchall()

    data = []
    for row in result_set:
        movie_data = {
            "movie_id": row[0],
            "crews": json.loads(row[1])
        }
        
        data.append(movie_data) 

    commit_and_close(conn)
    return jsonify({"results": data})

@app.route("/actors", methods=["GET"])
def get_actors_endpoint():
    conn = get_database_connection()
    cursor = conn.cursor(buffered=True)
    
    sqlquery = """
    SELECT
        M.movie_id,
        JSON_ARRAYAGG(
            JSON_OBJECT(
                'fname', A.actor_fname,
                'lname', A.actor_lname,
                'mname', A.actor_mname,
                'img_url', A.actor_img_url,
                'popular', A.actor_popular
            )
        ) AS actors
    FROM
        Actor AS A
    LEFT JOIN 
        Movie_has_Actor AS MA 
        ON A.actor_id = MA.actor_id
    LEFT JOIN
        Movie AS M
        ON M.movie_id = MA.movie_id
    GROUP BY
        M.movie_id;
    """
    cursor.execute(sqlquery)
    result_set = cursor.fetchall()

    data = [] 
    for row in result_set:
        movie_data = {
            "movie_id": row[0],
            "actors": [] 
        }

        actors_json = json.loads(row[1])

        for actor_data in actors_json:
            actor = {
                "fname": actor_data["fname"],
                "lname": actor_data["lname"],
                "mname": actor_data["mname"],
                "img_url": actor_data["img_url"],
                "popular": actor_data["popular"]
            }
            movie_data["actors"].append(actor)

        data.append(movie_data) 

    commit_and_close(conn)
    return jsonify({"results": data}) 